apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: karpenter-default
spec:
  instanceProfile: ${eks-cluster-id}-managed-ondemand
  subnetSelector:
    kubernetes.io/cluster/${eks-cluster-id}: '*'
    kubernetes.io/role/internal-elb: '1'
  securityGroupSelector:
    aws:eks:cluster-name: ${eks-cluster-id}
  tags:
    karpenter.sh/cluster_name: ${eks-cluster-id}
    karpenter.sh/provisioner: team
---
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: default
spec:
  requirements:
    # - key: karpenter.k8s.aws/instance-family
    #  operator: NotIn
    #  values:
    #  - a1
    #  - c1
    #  - c3
    #  - inf1
    #  - t3
    #  - t2
    #- key karpenter.k8s.aws/instance-cpu
    #  operator: Lt
    #  values:
    #    - "33"
    - key: 'kubernetes.io/arch'
      operator: In
      values: ['amd64']
    - key: karpenter.sh/capacity-type
      operator: In
      values: ['on-demand', 'spot']
  providerRef:
    name: karpenter-default
    tags:
      karpenter.sh/cluster_name: ${eks-cluster-id}
      karpenter.sh/provisioner: default
  ttlSecondsAfterEmpty: 60
  limits:
    resources:
      cpu: '200'
  labels:
    billing-team: default
    team: default
    type: karpenter
  taints:
    - key: karpenter
      value: 'true'
      effect: NoSchedule
